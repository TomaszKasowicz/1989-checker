name: "1989 Checker"
on:
  workflow_dispatch:
    inputs:
      enable-bcc:
        type: boolean
        default: true
  schedule:
    - cron: '*/30 * * * *'

env:
  BCC: ${{ vars.ENABLE_BCC == '1' || inputs.enable-bcc || false }}
jobs:
  checker:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
      
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT }}

    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Get Playwright version
      run: echo "PLAYWRIGHT_VERSION=$(npx playwright --version | awk '{print $2}')" >> $GITHUB_ENV

    - name: Cache Playwright
      uses: actions/cache@v4
      id: cache-playwright
      with:
        path: ~/.cache/ms-playwright
        key: playwright-${{ env.PLAYWRIGHT_VERSION }}

    - name: Install Playwright Browsers
      if: steps.cache-playwright.outputs.cache-hit != 'true'
      run: npx playwright install --with-deps chromium
      
    - name: Run Playwright tests
      run: npx playwright test

    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 2

    - name: Run Comparator
      run: npx tsx ./comparator.ts

    - name: Check if New Tickets are available
      id: check-new-tickets
      run: |
        echo "Checking if new Tickets are available"
        if [ -f "new-tickets.html" ]; then
          echo "new-tickets=true" >> "$GITHUB_OUTPUT"
        else
          echo "new-tickets=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Commit Changes
      if: steps.check-new-tickets.outputs.new-tickets == 'true'
      run: |
        git config --global user.email "bot@github.com"
        git config --global user.name "GitHub Bot"
        git add tickets.json
        git commit -m "chore: Update tickets.json" || true
        git push origin HEAD:main || true

    - name: Send Email
      if: steps.check-new-tickets.outputs.new-tickets == 'true'
      uses: dawidd6/action-send-mail@611879133a9569642c41be66f4a323286e9b8a3b # v4
      with:
        server_address: smtp.gmail.com
        # Server port, default 25:
        server_port: 465
        # Optional whether this connection use TLS (default is true if server_port is 465)
        secure: true
        # Optional (recommended) mail server username:
        username: ${{secrets.MAIL_USER}}
        # Optional (recommended) mail server password:
        password: ${{secrets.MAIL_PASSWORD}}
        # Required mail subject:
        subject: "1989 - Bilety"
        # Required recipients' addresses:
        to: ${{secrets.MAIL_USER}}
        # Required sender full name (address can be skipped):
        from: ${{secrets.MAIL_USER}}
        # Optional plain body:
        # body: Build job of ${{github.repository}} completed successfully!
        # Optional HTML body read from file:
        html_body: file://new-tickets.html
        # # Optional carbon copy recipients:
        # cc: kyloren@example.com,leia@example.com
        # # Optional blind carbon copy recipients:
        bcc: ${{ env.BCC == 'true' && vars.MAIL_BCC_LIST || '' }}
        # Optional recipient of the email response:
        # reply_to: luke@example.com
        # Optional Message ID this message is replying to:
        # in_reply_to: <random-luke@example.com>
        # Optional unsigned/invalid certificates allowance:
        ignore_cert: false
        # Optional converting Markdown to HTML (set content_type to text/html too):
        # convert_markdown: true
        # Optional attachments:
        # attachments: attachments.zip,git.diff,./dist/static/*.js
        # Optional priority: 'high', 'normal' (default) or 'low'
        priority: high
        # # Optional nodemailerlog: true/false
        # nodemailerlog: false
        # # Optional nodemailerdebug: true/false if true lognodem will also be set true
        # nodemailerdebug: false
